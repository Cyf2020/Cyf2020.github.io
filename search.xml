<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HEXO中的footnotes插件（快速给Markdown文档添加脚注）</title>
    <url>/2019/12/29/HEXO%E4%B8%AD%E7%9A%84footnotes%E6%8F%92%E4%BB%B6%EF%BC%88%E5%BF%AB%E9%80%9F%E7%BB%99Markdown%E6%96%87%E6%A1%A3%E6%B7%BB%E5%8A%A0%E8%84%9A%E6%B3%A8%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<p>今天介绍一款hexo里的插件，能够自动在生成的网页最底部添加脚注的解释信息，安装与使用方法如下</p>
<a id="more"></a>
<h1 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h1><hr>
<ul>
<li><p>在HEXO建立的个人博客编写markdown文档时迅速编写脚注</p>
</li>
<li><p>效果如下</p>
</li>
<li><div align=center> <img src="/images/1-1.bmp"/><div>
<div align=center> <img src="/images/1-2.bmp" /><div>

</li>
</ul>
<h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><hr>
<ol>
<li><p>以及安装HEXO，并建立博客文件夹根目录 </p>
</li>
<li><p>使用cnpm进行安装，搜索引擎搜索如何安装cnpm，会有许多教程，不再赘述</p>
</li>
<li><p>在git bash中进入博客文件夹根目录</p>
</li>
<li><p>输入命令 <code>$ cnpm install hexo-footnotes --save</code></p>
</li>
</ol>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><hr>
<ol>
<li>“需要脚注的内容”+[ ^脚注编号] </li>
<li>就会显示为 “内容”<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
<li>[ ^脚注编号]：“解释的内容” 即可在文章结尾显示解释内容（如本文末尾所示）</li>
</ol>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">解释内容
<br/>

			<script>
				console.error("Error: [hexo-tag-aplayer] Specified asset file not found (&quot;&quot;)");
			</script>
<br/></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>前端HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>footnotes</tag>
      </tags>
  </entry>
  <entry>
    <title>python三行代码实现电脑端控制安卓手机的连点脚本</title>
    <url>/2019/12/29/%E5%AE%9E%E7%8E%B0%E7%94%B5%E8%84%91%E7%AB%AF%E6%8E%A7%E5%88%B6%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E7%9A%84%E8%BF%9E%E7%82%B9%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<ul>
<li>前段时间，朋友有抢淘宝直播红包的需求，具体抢红包的细节是，连续点按手机界面上出现的按钮。于是我萌生了使用python脚本控制安卓手机，连续点击屏幕的想法<a id="more"></a>
<h1 id="电脑软件准备"><a href="#电脑软件准备" class="headerlink" title="电脑软件准备"></a>电脑软件准备</h1></li>
</ul>
<hr>
<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">Anaconda包管理器</a>,点击进入下载页面（最底部为最新版本）,按需求下载32位或64位</li>
<li><a href="https://pan.baidu.com/s/1C_20EIVrFVRLSbKIppPNvQ" target="_blank" rel="noopener">adb安卓调试桥</a>,百度网盘链接,点击下载</li>
<li>vscode(非必须)</li>
<li>以上软件均需添加到系统环境变量中，这一步请自行百度搜索配置</li>
<li>在cmd窗口输入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb -version</span><br><span class="line">python3 -v</span><br></pre></td></tr></table></figure>
即可确认环境是否准备完善</li>
</ul>
<h1 id="手机准备"><a href="#手机准备" class="headerlink" title="手机准备"></a>手机准备</h1><hr>
<ol>
<li>打开开发者模式，具体手机型号均有不同，例如OPPO手机流程如下<ul>
<li>设置-&gt;关于手机-&gt;连续点按版本号5次</li>
</ul>
</li>
<li>打开开发者模式的情况下，打开usb调试开关</li>
<li>连接手机   </li>
</ol>
<h1 id="python与adb指令配合实现自动点按手机屏幕"><a href="#python与adb指令配合实现自动点按手机屏幕" class="headerlink" title="python与adb指令配合实现自动点按手机屏幕"></a>python与adb指令配合实现自动点按手机屏幕</h1><hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import os,time</span><br><span class="line">for i in range(0,20) #循环20次</span><br><span class="line">    os.system(&#39;adb shell input tap 500 1300&#39;) </span><br><span class="line">    #输出指令到控制台,点按位置在(500,1300)处</span><br><span class="line">    time.sleep(1) #输出之间的时间间隔</span><br></pre></td></tr></table></figure>
<h2 id="由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件"><a href="#由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件" class="headerlink" title="由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件"></a>由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件</h2><br/>

        <div id="aplayer-mDaMBRZN" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">
            <pre class="aplayer-lrc-content"></pre>
        </div>
        <script>
          var ap = new APlayer({
            element: document.getElementById("aplayer-mDaMBRZN"),
            narrow: false,
            autoplay: true,
            showlrc: false,
            music: {
              title: "城南花已开",
              author: "三亩地",
              url: "http://m10.music.126.net/20191229195253/8b4d7c8452c22d7741152bd709797a07/ymusic/0bfe/142a/f8dd/dba327776596fa419e3c8fa6d4c4de43.mp3",
              pic: "",
              lrc: ""
            }
          });
          window.aplayers || (window.aplayers = []);
          window.aplayers.push(ap);
        </script>
<br/>
完，如果本文对您有帮助的话，您的赞赏是我进步的最大动力。如果有任何问题，欢迎在评论区指出,您也可以通过点击主页左下角里的邮箱地址联系我。]]></content>
      <categories>
        <category>python语言</category>
        <category>安卓开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>android</tag>
        <tag>adb</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
</search>
