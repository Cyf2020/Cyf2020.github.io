<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaSE学习笔记</title>
    <url>/2019/12/30/JavaSE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学习JavaSE过程中的笔记，以及一些常见问题的回答</p>
<a id="more"></a>
<h1 id="Java语言准备工作"><a href="#Java语言准备工作" class="headerlink" title="Java语言准备工作"></a>Java语言准备工作</h1><h2 id="JDK-JRE-JVM三者关系"><a href="#JDK-JRE-JVM三者关系" class="headerlink" title="JDK,JRE,JVM三者关系"></a>JDK,JRE,JVM三者关系</h2><ol>
<li>JDK包含JRE，JRE又包含JVM</li>
<li>JDK=JRE+Java开发工具（javac.exe,java.exe,javadoc.exe）</li>
<li>JRE=JVM+Java核心类库</li>
</ol>
<h2 id="Java系统环境变量的配置"><a href="#Java系统环境变量的配置" class="headerlink" title="Java系统环境变量的配置"></a>Java系统环境变量的配置</h2><ol>
<li>配置JAVA_HOME为bin的上一层目录</li>
<li>path=%JAVA_HOME%\bin</li>
</ol>
<h2 id="常用的cmd命令行操作"><a href="#常用的cmd命令行操作" class="headerlink" title="常用的cmd命令行操作"></a>常用的cmd命令行操作</h2><ul>
<li>cd 进入路径 md 创建目录 rd 删除目录 del 删除文件</li>
</ul>
<h1 id="Java基础语法-定义赋值运算"><a href="#Java基础语法-定义赋值运算" class="headerlink" title="Java基础语法(定义赋值运算)"></a>Java基础语法(定义赋值运算)</h1><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><ul>
<li>包名 所有字母小写 com.package</li>
<li>类名、接口名 所有单词首字母大写</li>
<li>变量名、方法名 第一个单词小写，其余单词首字母大写</li>
<li>常量名 大写下划线连接 <code>final int CONST</code></li>
</ul>
<h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><table>
<thead>
<tr>
<th align="center">数据类型</th>
<th align="center">储存空间</th>
<th align="center">范围</th>
</tr>
</thead>
<tbody><tr>
<td align="center">byte</td>
<td align="center">1字节(8bit)</td>
<td align="center">-128~127</td>
</tr>
<tr>
<td align="center">short</td>
<td align="center">2字节</td>
<td align="center">-2^15~2^15-1</td>
</tr>
<tr>
<td align="center">int</td>
<td align="center">4字节</td>
<td align="center">-2^31~2^31-1(约21亿)</td>
</tr>
<tr>
<td align="center">long</td>
<td align="center">8字节</td>
<td align="center">-2^63~2^63-1</td>
</tr>
<tr>
<td align="center">float</td>
<td align="center">4字节</td>
<td align="center">\</td>
</tr>
<tr>
<td align="center">double</td>
<td align="center">8字节</td>
<td align="center">\</td>
</tr>
<tr>
<td align="center">char</td>
<td align="center">2字节</td>
<td align="center">\</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> a = <span class="number">12f</span>; <span class="comment">//浮点型默认double型,后加f转换</span></span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0xf</span>; <span class="comment">//16进制声明</span></span><br><span class="line"><span class="keyword">int</span> c = <span class="number">012</span>; <span class="comment">//八进制声明</span></span><br><span class="line"><span class="keyword">double</span> d =<span class="number">5.12e-2</span>;<span class="comment">//科学计数法声明</span></span><br><span class="line"><span class="keyword">char</span> e = <span class="string">'\u000a'</span>; <span class="comment">//unicode值表示字符常量</span></span><br><span class="line"><span class="keyword">long</span> f = <span class="number">12323L</span>;</span><br><span class="line"><span class="keyword">int</span> g= <span class="number">0b1010</span><span class="comment">//二进制声明</span></span><br></pre></td></tr></table></figure>

<h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//截断</span></span><br><span class="line"><span class="keyword">double</span> a=<span class="number">1.2</span>;</span><br><span class="line"><span class="keyword">int</span> b=(<span class="keyword">int</span>)a;</span><br><span class="line"><span class="comment">//精度损失</span></span><br><span class="line"><span class="keyword">int</span> c=<span class="number">128</span>;</span><br><span class="line"><span class="keyword">byte</span> d=(<span class="keyword">byte</span>)c;<span class="comment">//d=-128</span></span><br></pre></td></tr></table></figure>
<h3 id="String类型"><a href="#String类型" class="headerlink" title="String类型"></a>String类型</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> numberStr= <span class="number">001</span>;</span><br><span class="line">String name=<span class="string">"Cyf"</span>;</span><br><span class="line">System.out.println(numberStr+name);<span class="comment">//连接操作 </span></span><br><span class="line"><span class="comment">//char型相加做的是ASCII运算</span></span><br><span class="line">System.out.println(<span class="string">"*  *"</span>);</span><br><span class="line">System.out.println(<span class="string">'*'</span>+<span class="string">'\t'</span>+<span class="string">'*'</span>);<span class="comment">//输出的是数字</span></span><br><span class="line">System.out.println(<span class="string">'*'</span>+<span class="string">"\t"</span>+<span class="string">'*'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="二进制与十进制的转换"><a href="#二进制与十进制的转换" class="headerlink" title="二进制与十进制的转换"></a>二进制与十进制的转换</h2><ul>
<li>二进制-&gt;十进制</li>
</ul>
<table>
<thead>
<tr>
<th align="center">二进制</th>
<th align="center">二进制运算</th>
<th align="center">运算所得加数</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">2^0</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">2^1</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">2^2</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">2^3</td>
<td align="center">8</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">0b1101</td>
<td align="center">/</td>
</tr>
</tbody></table>
<ul>
<li>十进制-&gt;二进制</li>
</ul>
<table>
<thead>
<tr>
<th align="center">十进制</th>
<th align="center">除数</th>
<th align="center">商</th>
<th align="center">余数</th>
</tr>
</thead>
<tbody><tr>
<td align="center">13</td>
<td align="center">2</td>
<td align="center">6</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">2</td>
<td align="center">3</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">2</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">0</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">/</td>
<td align="center">/</td>
<td align="center">0b1101</td>
</tr>
</tbody></table>
<h2 id="原码、反码"><a href="#原码、反码" class="headerlink" title="原码、反码"></a>原码、反码</h2><table>
<thead>
<tr>
<th align="center">十进制数值</th>
<th align="center">1bit符号位</th>
<th align="center">/</th>
<th align="center">码</th>
</tr>
</thead>
<tbody><tr>
<td align="center">14</td>
<td align="center">0</td>
<td align="center">0001110</td>
<td align="center">14的原码</td>
</tr>
<tr>
<td align="center">-14</td>
<td align="center">1</td>
<td align="center">0001110</td>
<td align="center">-14的原码</td>
</tr>
<tr>
<td align="center">/</td>
<td align="center">1</td>
<td align="center">1110001</td>
<td align="center">-14的反码</td>
</tr>
<tr>
<td align="center">真正的-14</td>
<td align="center">1</td>
<td align="center">1110010</td>
<td align="center">-14的补码</td>
</tr>
</tbody></table>
<ul>
<li>对于正数，三码合一</li>
<li>对于负数，将原码除符号位外取反得到反码，将反码加1得到补码</li>
<li>计算机底层都使用补码来存储数据</li>
<li>已给出一个数为0b10111011,对应的十进制为多少？<ul>
<li>首先计算反码为0b10111010</li>
<li>原码为0b11000101</li>
<li>十进制为-69</li>
</ul>
</li>
<li>解释了为什么一个int类型的128在强制转换到byte类型时，得到的是-128</li>
</ul>
<h2 id="阶段总结1"><a href="#阶段总结1" class="headerlink" title="阶段总结1"></a>阶段总结1</h2><ol>
<li>Java变量按数据类型的划分以及各自所占空间大小?<ul>
<li>byte,short,int,long:1,2,4,8</li>
<li>char:2</li>
<li>float,double:4,8</li>
</ul>
</li>
</ol>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//情形1</span></span><br><span class="line"><span class="keyword">short</span> num=<span class="number">1</span>;</span><br><span class="line">num=num+<span class="number">1</span>;<span class="comment">//编译不通过,1是int型,后面的num会强制转化为int</span></span><br><span class="line"><span class="comment">//以下三种方法都可以实现</span></span><br><span class="line">num+=<span class="number">1</span>;</span><br><span class="line">num++;</span><br><span class="line">num=(<span class="keyword">short</span>)(num+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//情形2</span></span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line">i*=<span class="number">0.1</span>;<span class="comment">//i不改变int型，故i=0</span></span><br><span class="line"><span class="comment">//情形3</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">10</span>;</span><br><span class="line">n+=(n++)+(++n);<span class="comment">//n=n+(n++)+(++n)=10+10+12</span></span><br></pre></td></tr></table></figure>

<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul>
<li>&amp;和&amp;&amp;（逻辑与和短路与）</li>
<li>|和||（逻辑或和短路或）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//逻辑与</span></span><br><span class="line"><span class="keyword">boolean</span> a=<span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(a&amp;(num++&gt;<span class="number">0</span>))&#123;</span><br><span class="line"><span class="comment">/*这里的逻辑与在已经判断左边是false的情况下，依旧对右边进行判断，所以num最终等于11*/</span></span><br><span class="line">    do_sth();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//短路与</span></span><br><span class="line">num=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(a&amp;&amp;(num++&gt;<span class="number">0</span>))&#123;</span><br><span class="line"><span class="comment">/*这里的短路与在判断了左边是false的情况下，不对右边进行判断，所以num最终等于10*/</span></span><br><span class="line">    do_sth();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*逻辑或和短路或同理，短路或在左边为true的情况下，不对右边进行判断*/</span></span><br></pre></td></tr></table></figure>

<h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">0b00000001</span>;<span class="comment">//值为1</span></span><br><span class="line">a=a&lt;&lt;<span class="number">2</span>;<span class="comment">//a左移两位变为0b00000100,值为4</span></span><br><span class="line"><span class="comment">//当位运算移动到符号位时，如a&lt;&lt;31,就会变成负数</span></span><br><span class="line"><span class="comment">//&gt;&gt;&gt;运算符与&gt;&gt;的区别</span></span><br><span class="line"><span class="keyword">byte</span> b=<span class="number">0b10000001</span><span class="comment">//-127</span></span><br><span class="line">b=b&gt;&gt;<span class="number">1</span>;<span class="comment">//空缺用现有符号位代替，b=0b11000000,-64</span></span><br><span class="line">b=b&gt;&gt;&gt;<span class="number">1</span>;<span class="comment">//空缺用0代替，b=0b01000000,64</span></span><br></pre></td></tr></table></figure>
<ul>
<li>面试题：如何高效计算2*8？答：2&lt;&lt;3 或 8&lt;&lt;1</li>
</ul>
<h2 id="阶段总结2"><a href="#阶段总结2" class="headerlink" title="阶段总结2"></a>阶段总结2</h2><ol>
<li>&amp;和&amp;&amp;的异同？<ul>
<li>&amp;完全做完左右布尔表达式语句中的内容</li>
<li>&amp;&amp;一旦确认左边为false，立即结束执行右边的布尔表达式</li>
<li>开发中一般使用&amp;&amp;，但合理使用&amp;能够合理规避一些异常</li>
</ul>
</li>
<li>下列代码执行结果是？</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Operate</span></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     <span class="keyword">boolean</span> x = <span class="keyword">false</span>; </span><br><span class="line">     <span class="keyword">short</span> z =<span class="number">40</span>;</span><br><span class="line">     <span class="keyword">if</span>((z++ == <span class="number">40</span>)&amp;&amp;(y=<span class="keyword">true</span>))<span class="comment">//小心，这里是赋值给y</span></span><br><span class="line">         z++;</span><br><span class="line">     <span class="keyword">if</span>(++z==<span class="number">43</span>||z++ == <span class="number">43</span>)<span class="comment">//注意这里是短路与</span></span><br><span class="line">         z++;</span><br><span class="line">     System.out.println(z);<span class="comment">//结果为44</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>定义三个int类型整数，一句代码返回最大值</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Max</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(maxNum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">maxNum</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (a&gt;b?a:b)&gt;c?(a&gt;b?a:b):c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Java基础语法-循环判断"><a href="#Java基础语法-循环判断" class="headerlink" title="Java基础语法(循环判断)"></a>Java基础语法(循环判断)</h1><h2 id="Scanner类概述（不建议在算法竞赛中使用）"><a href="#Scanner类概述（不建议在算法竞赛中使用）" class="headerlink" title="Scanner类概述（不建议在算法竞赛中使用）"></a>Scanner类概述（不建议在算法竞赛中使用）</h2><ol>
<li>导包 <code>import java.util.Scanner;</code> 写在class声明上面</li>
<li>创建对象 <code>Scanner input = new Scanner(System.in);</code></li>
<li><code>int num = input.nextInt()</code></li>
</ol>
<h2 id="随机数调用"><a href="#随机数调用" class="headerlink" title="随机数调用"></a>随机数调用</h2><figure class="highlight plain"><figcaption><span>num∈[0.0,1.0)<br></span></figcaption><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;(int)(Math.random()*(b-a+1)+a)&#96;&#96;&#96;即可返回一个int num∈[a,b]</span><br><span class="line"></span><br><span class="line">## 字符串判等</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;java</span><br><span class="line">import java.util.Scanner;</span><br><span class="line">class StringEquals&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        Scanner input &#x3D; new Scanner(System.in);</span><br><span class="line">        String judgementStr &#x3D; input.next();</span><br><span class="line">        if(judgementStr.equals(&quot;What&#96;s in&quot;))&#x2F;&#x2F;字符串方法</span><br><span class="line">            do_Sth();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="switch判断（switch-case性能比if-else稍高）"><a href="#switch判断（switch-case性能比if-else稍高）" class="headerlink" title="switch判断（switch-case性能比if-else稍高）"></a>switch判断（switch-case性能比if-else稍高）</h2><ul>
<li>格式<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>()&#123;<span class="comment">//圆括号内为表达式</span></span><br><span class="line">    <span class="keyword">case</span> xx:<span class="comment">//byte/short/int/char/String/枚举类型，不能用boolean!</span></span><br><span class="line">        do_Sth();</span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//进入后如果不break，继续往下执行，否则继续执行</span></span><br><span class="line">    <span class="keyword">default</span>:<span class="comment">//default相当于else</span></span><br><span class="line">        do_Sth();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>编程语言</tag>
        <tag>基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title>python三行代码实现电脑端控制安卓手机的连点脚本</title>
    <url>/2019/12/29/%E5%AE%9E%E7%8E%B0%E7%94%B5%E8%84%91%E7%AB%AF%E6%8E%A7%E5%88%B6%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E7%9A%84%E8%BF%9E%E7%82%B9%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<ul>
<li>前段时间，朋友有抢淘宝直播红包的需求，具体抢红包的细节是，连续点按手机界面上出现的按钮。于是我萌生了使用python脚本控制安卓手机，连续点击屏幕的想法<a id="more"></a>
<h1 id="电脑软件准备"><a href="#电脑软件准备" class="headerlink" title="电脑软件准备"></a>电脑软件准备</h1></li>
</ul>
<hr>
<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">Anaconda包管理器</a>,点击进入下载页面（最底部为最新版本）,按需求下载32位或64位</li>
<li><a href="https://pan.baidu.com/s/1C_20EIVrFVRLSbKIppPNvQ" target="_blank" rel="noopener">adb安卓调试桥</a>,百度网盘链接,点击下载</li>
<li>vscode(非必须)</li>
<li>以上软件均需添加到系统环境变量中，这一步请自行百度搜索配置</li>
<li>在cmd窗口输入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb -version</span><br><span class="line">python3 -v</span><br></pre></td></tr></table></figure>
即可确认环境是否准备完善</li>
</ul>
<h1 id="手机准备"><a href="#手机准备" class="headerlink" title="手机准备"></a>手机准备</h1><hr>
<ol>
<li>打开开发者模式，具体手机型号均有不同，例如OPPO手机流程如下<ul>
<li>设置-&gt;关于手机-&gt;连续点按版本号5次</li>
</ul>
</li>
<li>打开开发者模式的情况下，打开usb调试开关</li>
<li>连接手机   </li>
</ol>
<h1 id="python与adb指令配合实现自动点按手机屏幕"><a href="#python与adb指令配合实现自动点按手机屏幕" class="headerlink" title="python与adb指令配合实现自动点按手机屏幕"></a>python与adb指令配合实现自动点按手机屏幕</h1><hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os,time</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>) <span class="comment">#循环20次</span></span><br><span class="line">    os.system(<span class="string">'adb shell input tap 500 1300'</span>) </span><br><span class="line">    <span class="comment">#输出指令到控制台,点按位置在(500,1300)处</span></span><br><span class="line">    time.sleep(<span class="number">1</span>) <span class="comment">#输出之间的时间间隔</span></span><br></pre></td></tr></table></figure>
<h2 id="由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件"><a href="#由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件" class="headerlink" title="由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件"></a>由此便简单实现了自动点击屏幕的脚本，在此基础上还可以进一步实现识别特定目标并点击，这样便可以开发出自动抢红包等脚本软件</h2><p>完，如果本文对您有帮助的话，您的赞赏是我进步的最大动力。如果有任何问题，欢迎在评论区指出,您也可以通过点击主页左下角里的邮箱地址联系我。</p>
]]></content>
      <categories>
        <category>python语言</category>
        <category>安卓开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>android</tag>
        <tag>adb</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO中的footnotes插件（快速给Markdown文档添加脚注）</title>
    <url>/2019/12/29/HEXO%E4%B8%AD%E7%9A%84footnotes%E6%8F%92%E4%BB%B6%EF%BC%88%E5%BF%AB%E9%80%9F%E7%BB%99Markdown%E6%96%87%E6%A1%A3%E6%B7%BB%E5%8A%A0%E8%84%9A%E6%B3%A8%EF%BC%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<p>今天介绍一款hexo里的插件，能够自动在生成的网页最底部添加脚注的解释信息，安装与使用方法如下</p>
<a id="more"></a>
<h1 id="插件概述"><a href="#插件概述" class="headerlink" title="插件概述"></a>插件概述</h1><hr>
<ul>
<li><p>在HEXO建立的个人博客编写markdown文档时迅速编写脚注</p>
</li>
<li><p>效果如下</p>
</li>
<li><div align=center> <img src="/images/1-1.bmp"/><div>
<div align=center> <img src="/images/1-2.bmp" /><div>

</li>
</ul>
<h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><hr>
<ol>
<li><p>以及安装HEXO，并建立博客文件夹根目录 </p>
</li>
<li><p>使用cnpm进行安装，搜索引擎搜索如何安装cnpm，会有许多教程，不再赘述</p>
</li>
<li><p>在git bash中进入博客文件夹根目录</p>
</li>
<li><p>输入命令 <code>$ cnpm install hexo-footnotes --save</code></p>
</li>
</ol>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><hr>
<ol>
<li>“需要脚注的内容”+[ ^脚注编号] </li>
<li>就会显示为 “内容”<a href="解释内容">^1</a></li>
<li>[ ^脚注编号]：“解释的内容” 即可在文章结尾显示解释内容（如本文末尾所示）</li>
</ol>
]]></content>
      <categories>
        <category>前端HEXO</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>footnotes</tag>
      </tags>
  </entry>
</search>
